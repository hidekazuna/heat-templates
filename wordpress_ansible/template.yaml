heat_template_version: 2013-05-23

description: >
  Heat WordPress template to deploy WordPress on two instances using Heat's
  software orchestration feature.
  This template has been tested to work on Heat Mitaka using neutron network
  and using a Ubuntu 14.04 image.

parameters:
  key_name:
    type: string
    description: Name of a key pair to enable SSH access to instances.
    default: default
  flavor:
    type: string
    description: Flavor to use for the WordPress server.
    constraints:
      - custom_constraint: nova.flavor
  image:
    type: string
    description: >
      Name or ID of the image to use for the WordPress server.
    default: ubuntu_software_config
  db_name:
    type: string
    description: WordPress database name
    default: wordpress
    constraints:
      - length: { min: 1, max: 64 }
        description: db_name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_name must begin with a letter and contain only alphanumeric
          characters
  db_username:
    type: string
    description: The WordPress database admin account username
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 16 }
        description: db_username must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_username must begin with a letter and contain only alphanumeric
          characters
  db_password:
    type: string
    description: WordPress database password
    default: wordpress
    constraints:
      - length: { min: 1, max: 64 }
        description: db_name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_password must begin with a letter and contain only alphanumeric
          characters
  db_rootpassword:
    type: string
    description: database root password
    default: root
    constraints:
      - length: { min: 1, max: 64 }
        description: db_name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_rootpassword must begin with a letter and contain only alphanumeric
          characters

resources:
  wordpress_config:
    type: OS::Heat::SoftwareConfig
    depends_on: apache_config
    properties:
      inputs:
        - name: db_name
        - name: db_user
        - name: db_password
        - name: db_rootpassword
        - name: db_ipaddr
      group: ansible
      config: { get_file: wp_install.yaml }

  apache_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ansible
      config: { get_file: apache_install.yaml }

  db_config:
    type: OS::Heat::SoftwareConfig
    properties:
      inputs:
        - name: db_rootpassword
        - name: db_name
        - name: db_user
        - name: db_password
        - name: db_rootpassword
      group: ansible
      config: { get_file: db_install.yaml }

  apache_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: db_deployment
    properties:
      config:
        get_resource: apache_config
      server:
        get_resource: webserver_instance

  wordpress_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: apache_deployment
    properties:
      config:
        get_resource: wordpress_config
      server:
        get_resource: webserver_instance
      input_values:
        db_name: { get_param: db_name }
        db_user: { get_param: db_username }
        db_password: { get_param: db_password }
        db_rootpassword: { get_param: db_rootpassword }
        db_ipaddr: { get_attr: [ dbserver_instance, networks, private, 0 ] }

  db_deployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      config:
        get_resource: db_config
      server:
        get_resource: dbserver_instance
      input_values:
        db_rootpassword: { get_attr: [ db_root_password, value ] }
        db_name: { get_param: db_name }
        db_user: { get_param: db_username }
        db_password: { get_param: db_password }
        db_rootpassword: { get_param: db_password }

  webserver_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      user_data_format: SOFTWARE_CONFIG

  dbserver_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      user_data_format: SOFTWARE_CONFIG

outputs:
  WebsiteURL:
    description: URL for Wordpress wiki
    value:
      str_replace:
        template: http://host/wordpress
        params:
          host: { get_attr: [webserver_instance, networks, private, 0] }
